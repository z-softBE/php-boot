<?php

namespace PhpBoot\Scripts\HttpStatusCode;

use Nette\PhpGenerator\PhpNamespace;

final readonly class StatusCodeGenerator
{
    private const string NAMESPACE = 'PhpBoot\\Http\\Common';

    private function __construct()
    {

    }

    /**
     * @param StatusCode[] $codes
     * @return void
     */
    public static function generateHttpCodeClasses(array $codes): void
    {
        $namespace = new PhpNamespace(self::NAMESPACE);
        $httpStatusCodeEnum = $namespace->addEnum('HttpStatusCode');
        $httpStatusCodeEnum->addComment('Generated by PhpBoot\\Scripts\\HttpStatusCode\\StatusCodeGenerator');
        $httpStatusCodeEnum->setType('int');

        $messages = [];
        foreach ($codes as $statusCode) {
            $messages[$statusCode->getCode()] = $statusCode->getMessage();

            $httpStatusCodeEnum->addCase(self::getStatusCodeName($statusCode), $statusCode->getCode())
            ->addComment($statusCode->getDescription());
        }

        file_put_contents(
            dirname(__DIR__) . '/../../Framework/Components/Http/src/Common/HttpStatusCode.php',
            "<?php\n\n" . $namespace
        );

        $namespace = new PhpNamespace(self::NAMESPACE);
        $httpStatusMessagesClass = $namespace->addClass('HttpStatusCodeMessages');
        $httpStatusMessagesClass->setReadOnly()
            ->setFinal()
            ->addComment('Generated by PhpBoot\\Scripts\\HttpStatusCode\\StatusCodeGenerator');

        $httpStatusMessagesClass->addMethod('__construct')
            ->setPrivate();

        $httpStatusMessagesClass->addConstant('STATUS_CODE_TO_MESSAGE', $messages)
            ->setPublic()
            ->setType('array');

        file_put_contents(
            dirname(__DIR__) . '/../../Framework/Components/Http/src/Common/HttpStatusCodeMessages.php',
            "<?php\n\n" . $namespace
        );
    }

    private static function getStatusCodeName(StatusCode $statusCode): string
    {
        $name = strtoupper($statusCode->getMessage());
        $name = str_replace([' ', '-'], '_', $name);
        $name = str_replace(['(', ')', '\''], '', $name);

        return 'HTTP_' . $name;
    }
}